[
    {
        "id": "e13418c849c02e15",
        "type": "tab",
        "label": "Flujo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b49030c2988c882b",
        "type": "modbus-read",
        "z": "e13418c849c02e15",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "1000",
        "quantity": "30",
        "rate": "5",
        "rateUnit": "m",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "76080f3df2997b52",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "1d064b4e8bec6ba3"
            ],
            []
        ]
    },
    {
        "id": "45a4388138aa0fbc",
        "type": "modbus-read",
        "z": "e13418c849c02e15",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "1000",
        "quantity": "30",
        "rate": "5",
        "rateUnit": "m",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "76080f3df2997b52",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 230,
        "y": 140,
        "wires": [
            [
                "ae141b2b8cb5afe2"
            ],
            []
        ]
    },
    {
        "id": "84d8a42c8bb53717",
        "type": "ui_ui_control",
        "z": "e13418c849c02e15",
        "name": "",
        "events": "all",
        "x": 200,
        "y": 280,
        "wires": [
            [
                "ea2063456bd04a70"
            ]
        ]
    },
    {
        "id": "1d064b4e8bec6ba3",
        "type": "function",
        "z": "e13418c849c02e15",
        "name": "function 1",
        "func": "msg.topic = \"INSERT INTO data (I1_A, I2_A, I3_A, I_AVG_A, UP1_V, UP2_V, UP3_V, UP_AVG_V, UL1_V, UL2_V, UL3_V, UL_AVG_V, PA1_kW, PA2_kW, PA3_kW, PA_AVG_kW, EPImp_Wh, EPExp_Wh) VALUES (?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?)\";\nmsg.payload = [\n    msg.payload[0], \n    msg.payload[2], \n    msg.payload[4],  \n    msg.payload[6], \n    msg.payload[10], \n    msg.payload[12], \n    msg.payload[14], \n    msg.payload[16], \n    msg.payload[20], \n    msg.payload[22], \n    msg.payload[24],  \n    msg.payload[26],  \n    msg.payload[28], \n    msg.payload[30], \n    msg.payload[32], \n    msg.payload[34], \n\n    ];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "4fc3e627200ed214"
            ]
        ]
    },
    {
        "id": "4fc3e627200ed214",
        "type": "mysql",
        "z": "e13418c849c02e15",
        "mydb": "328d2d1e6e3e45ac",
        "name": "db",
        "x": 730,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "77b88ed8458cb71f",
        "type": "function",
        "z": "e13418c849c02e15",
        "name": "function 2",
        "func": "msg.topic = \"INSERT INTO data (I1_A, I2_A, I3_A, I_AVG_A, UP1_V, UP2_V, UP3_V, UP_AVG_V, UL1_V, UL2_V, UL3_V, UL_AVG_V, PA1_kW, PA2_kW, PA3_kW, PA_AVG_kW, EPImp_Wh, EPExp_Wh) VALUES (?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?,?)\";\nmsg.payload = [\n    msg.payload[0], \n    msg.payload[2], \n    msg.payload[4],  \n    msg.payload[6], \n    msg.payload[10], \n    msg.payload[12], \n    msg.payload[14], \n    msg.payload[16], \n    msg.payload[20], \n    msg.payload[22], \n    msg.payload[24],  \n    msg.payload[26],  \n    msg.payload[28], \n    msg.payload[30], \n    msg.payload[32], \n    msg.payload[34], \n\n    ];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 140,
        "wires": [
            [
                "4fc3e627200ed214"
            ]
        ]
    },
    {
        "id": "ae141b2b8cb5afe2",
        "type": "delay",
        "z": "e13418c849c02e15",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 140,
        "wires": [
            [
                "77b88ed8458cb71f"
            ]
        ]
    },
    {
        "id": "ea2063456bd04a70",
        "type": "function",
        "z": "e13418c849c02e15",
        "name": "function 3",
        "func": "// Obtener la fecha actual\nlet currentDate = new Date();\nlet currentYear = currentDate.getFullYear();\nlet currentMonth = String(currentDate.getMonth() + 1).padStart(2, '0');\nlet currentDay = String(currentDate.getDate()).padStart(2, '0');\n\nmsg.topic = `\nSELECT \n    (SELECT MAX(EPImp_Wh) FROM data WHERE DATE(FECHA) = '${currentYear}-${currentMonth}-${currentDay}') AS last_value_today,\n    (SELECT MIN(EPImp_Wh) FROM data WHERE DATE(FECHA) = '${currentYear}-${currentMonth}-${currentDay}') AS first_value_today,\n    (SELECT MIN(EPImp_Wh) FROM data WHERE FECHA >= '${currentYear}-${currentMonth}-01 00:00:00') AS first_value_month,\n    (SELECT MAX(EPImp_Wh) FROM data) AS last_value_total;\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 280,
        "wires": [
            [
                "517bfd36e87c6dc3"
            ]
        ]
    },
    {
        "id": "517bfd36e87c6dc3",
        "type": "mysql",
        "z": "e13418c849c02e15",
        "mydb": "328d2d1e6e3e45ac",
        "name": "db",
        "x": 470,
        "y": 280,
        "wires": [
            [
                "513520cb498825aa"
            ]
        ]
    },
    {
        "id": "513520cb498825aa",
        "type": "function",
        "z": "e13418c849c02e15",
        "name": "function 4",
        "func": "// Validar que msg.payload tiene datos de la consulta MySQL\nif (msg.payload && msg.payload.length > 0) {\n    let result = msg.payload[0]; // Obtener el primer objeto de la consulta\n\n    // Procesar los datos para calcular los valores necesarios\n    let dailyProduction = result.last_value_today - result.first_value_today;\n    let monthlyProduction = result.last_value_total - result.first_value_month;\n    let totalProduction = result.last_value_total;\n\n    // Preparar la salida para el nodo Template\n    msg.payload = {\n        dailyProduction: dailyProduction || 0, // Producción del día\n        monthlyProduction: monthlyProduction || 0, // Producción del mes\n        totalProduction: totalProduction || 0 // Producción total\n    };\n\n    return msg;\n} else {\n    node.error(\"No se encontraron resultados en msg.payload.\");\n    return null; // Detener el flujo si no hay datos\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 280,
        "wires": [
            [
                "0cbe4333aed034a3"
            ]
        ]
    },
    {
        "id": "0cbe4333aed034a3",
        "type": "ui_template",
        "z": "e13418c849c02e15",
        "group": "12711c07f7cd43a7",
        "name": "Descargas",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function() {\n        var button = document.getElementById('downloadButton');\n        button.onclick = function() {\n            window.location.href = '/descarga';\n        };\n    })();\n</script>\n\n<div class=\"dashboard-container\">\n    <header class=\"dashboard-header\">\n        <h1 style=\"color: #F79E00 !important; font-size: 70px !important;\">enthra</h1>\n    </header>\n\n    <div class=\"stats-row\">\n        <div class=\"stat-card\">\n            <div class=\"date-selector\">\n                <label for=\"datePicker\">Seleccionar datos desde:</label>\n                <input id=\"datePicker\" type=\"date\" class=\"form-control\" />\n                <button id=\"downloadButton\" class=\"btn\">Descargar</button>\n            </div>\n        </div>\n\n        <div class=\"stat-card\">\n            <div class=\"stat-icon\">\n                <i class=\"fa fa-sun-o\"></i>\n            </div>\n            <div class=\"stat-content\">\n                <h2>Producción del Día</h2>\n                <p style=\"color: #F79E00 !important; font-weight: bold;\">{{msg.payload.dailyProduction}} Wh</p>\n            </div>\n        </div>\n\n        <div class=\"stat-card\">\n            <div class=\"stat-icon\">\n                <i class=\"fa fa-calendar\"></i>\n            </div>\n            <div class=\"stat-content\">\n                <h2>Producción del Mes</h2>\n                <p style=\"color: #F79E00 !important; font-weight: bold;\">{{msg.payload.monthlyProduction}} Wh</p>\n            </div>\n        </div>\n\n        <div class=\"stat-card\">\n            <div class=\"stat-icon\">\n                <i class=\"fa fa-bolt\"></i>\n            </div>\n            <div class=\"stat-content\">\n                <h2>Producción Total</h2>\n                <p style=\"color: #F79E00 !important; font-weight: bold;\">{{msg.payload.totalProduction}} Wh</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    @import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@400;700&display=swap');\n    body {\n        font-family: 'Comfortaa', sans-serif !important;\n        background-color: #f4f7fa;\n        margin: 0;\n        padding: 0;\n    }\n\n    .dashboard-container {\n        max-width: 1000px;\n        margin: 20px auto;\n        padding: 20px;\n        background-color: #ffffff;\n        border-radius: 12px;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    }\n\n    .dashboard-header {\n        text-align: center;\n        margin-bottom: 20px;\n    }\n\n    .dashboard-header h1 {\n        font-size: 32px;\n        color: #F79E00;\n        margin: 0;\n    }\n\n    .dashboard-header p {\n        font-size: 16px;\n        color: #6c757d;\n        margin: 5px 0 0;\n    }\n\n    .stats-row {\n        display: flex;\n        justify-content: space-between;\n        flex-wrap: wrap;\n        gap: 10px;\n    }\n\n    .stat-card {\n        font-family: 'sans-serif', sans-serif !important;\n        flex: 1;\n        min-width: 200px;\n        max-width: 220px;\n        height: 150px;\n        background-color: #ffffff;\n        border: 1px solid #eaeaea;\n        border-radius: 12px;\n        padding: 10px;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        transition: transform 0.3s ease, box-shadow 0.3s ease;\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    }\n\n    .stat-card:hover {\n        transform: translateY(-5px);\n        box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n    }\n\n    .stat-icon {\n        font-size: 36px;\n        color: #F79E00;\n        margin-bottom: 10px;\n    }\n\n    .stat-content h2 {\n        font-size: 20px;\n        color: #343a40 !important;\n        font-weight: bold;\n        margin: 0 0 5px;\n    }\n\n    .stat-content p {\n        font-size: 18px;\n        color: #F79E00 !important;\n        font-weight: bold;\n        margin: 0 0 5px;\n    }\n\n    .date-selector {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        gap: 10px;\n    }\n\n    .date-selector label {\n        font-size: 14px;\n        color: #343a40;\n    }\n\n    .date-selector input {\n        width: 100%;\n        padding: 5px;\n        border: 1px solid #ced4da;\n        border-radius: 5px;\n        font-size: 14px;\n    }\n\n    .date-selector button {\n        background-color: #F79E00;\n        color: white;\n        border: none;\n        border-radius: 5px;\n        padding: 8px 15px;\n        font-size: 14px;\n        cursor: pointer;\n    }\n\n    .date-selector button:hover {\n        background-color: #d17b00;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f5c8ea29a01041ea",
        "type": "http in",
        "z": "e13418c849c02e15",
        "name": "",
        "url": "/descarga",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 340,
        "wires": [
            [
                "c97eb7b25819e603"
            ]
        ]
    },
    {
        "id": "c97eb7b25819e603",
        "type": "function",
        "z": "e13418c849c02e15",
        "name": "function 5",
        "func": "let selectedDate = global.get('selectedDate'); // Obtener el valor de la variable global de fecha\n\nif (selectedDate && selectedDate !== 0) {\n    // Si la variable tiene una fecha válida, crea la query para ese rango\n    msg.topic = `\n        SELECT * \n        FROM data \n        WHERE FECHA >= '${selectedDate}' AND FECHA <= NOW();\n    `;\n} else {\n    // Si la variable es 0, trae toda la base de datos\n    msg.topic = `\n        SELECT * \n        FROM data;\n    `;\n}\n\n// Establecer la variable global en 0\nglobal.set('selectedDate', 0);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 340,
        "wires": [
            [
                "6928e81d9f4c440d"
            ]
        ]
    },
    {
        "id": "6928e81d9f4c440d",
        "type": "mysql",
        "z": "e13418c849c02e15",
        "mydb": "328d2d1e6e3e45ac",
        "name": "db",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "555fd5e5323999fa"
            ]
        ]
    },
    {
        "id": "555fd5e5323999fa",
        "type": "function",
        "z": "e13418c849c02e15",
        "name": "function 6",
        "func": "let datos = msg.payload.map(fila => {\n    return {\n        \"ID\": fila.ID,\n        \"FECHA\": fila.FECHA,\n        \"I1_A\": fila.I1_A,\n        \"I2_A\": fila.I2_A,\n        \"I3_A\": fila.I3_A,\n        \"I_AVG_A\": fila.I_AVG_A,\n        \"UP1_V\": fila.UP1_V,\n        \"UP2_V\": fila.UP2_V,\n        \"UP3_V\": fila.UP3_V,\n        \"UP_AVG_V\": fila.UP_AVG_V,\n        \"UL1_V\": fila.UL1_V,\n        \"UL2_V\": fila.UL2_V,\n        \"UL3_V\": fila.UL3_V,\n        \"UL_AVG_V\": fila.UL_AVG_V,\n        \"PA1_kW\": fila.PA1_kW,\n        \"PA2_kW\": fila.PA2_kW,\n        \"PA3_kW\": fila.PA3_kW,\n        \"PA_AVG_kW\": fila.PA_AVG_kW,\n        \"EPImp_Wh\": fila.EPImp_Wh,\n        \"EPExp_Wh\": fila.EPExp_Wh\n    };\n});\n\n// El nuevo payload será el array de objetos JSON para el archivo Excel.\nmsg.payload = datos;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "bc19c70d5f985416"
            ]
        ]
    },
    {
        "id": "bc19c70d5f985416",
        "type": "xlsx-out",
        "z": "e13418c849c02e15",
        "name": "file_excel",
        "sheetName": "h1",
        "x": 780,
        "y": 340,
        "wires": [
            [
                "1e97a61a6c39b7f3"
            ]
        ]
    },
    {
        "id": "1e97a61a6c39b7f3",
        "type": "function",
        "z": "e13418c849c02e15",
        "name": "function 7",
        "func": "let currentDate = new Date();\nlet day = String(currentDate.getDate()).padStart(2, '0');\nlet month = String(currentDate.getMonth() + 1).padStart(2, '0'); // Los meses son 0-indexed\nlet year = currentDate.getFullYear();\nlet formattedDate = `${day}-${month}-${year}`; // Formato DD-MM-YYYY\n\nmsg.headers = {\n    'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'Content-Disposition': `attachment; filename=\"reporte_${formattedDate}.xlsx\"`\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 340,
        "wires": [
            [
                "870c8a1be51d2bcd"
            ]
        ]
    },
    {
        "id": "870c8a1be51d2bcd",
        "type": "http response",
        "z": "e13418c849c02e15",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 340,
        "wires": []
    },
    {
        "id": "76080f3df2997b52",
        "type": "modbus-client",
        "name": "",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "60000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "328d2d1e6e3e45ac",
        "type": "MySQLdatabase",
        "name": "Camilo",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "camiloarango_db",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "12711c07f7cd43a7",
        "type": "ui_group",
        "name": "enthraSolar",
        "tab": "ba53868324a2fe08",
        "order": 1,
        "disp": false,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ba53868324a2fe08",
        "type": "ui_tab",
        "name": "Enthra Solar",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false,
        "info": "body.nr-dashboard-theme {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n}\r\n.nr-dashboard-cardcontainer {\r\n    margin: auto;\r\n}\r\n"
    }
]